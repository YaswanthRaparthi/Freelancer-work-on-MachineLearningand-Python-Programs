#fractal Tree
#A fractal tree can be created by recursively symmetrical branching.
#The trunk of length 1 splits into two branches of length r, each making an angle q with the direction of the trunk.
#Both of these branches divides into two branches of length r*r, each making an angle q with the direction of its parent branch.
#Continuing in this way for infinitely many branching, the tree is the set of branches, together with their limit points, called branch tips.

#Example - 1

import pygame, math

pygame.init()
screen = pygame.display.set_mode((750, 650))
pygame.display.set_caption("Fractal Tree")
display = pygame.display.get_surface()

def drawTree(a, b, pos, deepness):
    if deepness:
        c = a + int(math.cos(math.radians(pos)) * deepness * 10.0)
        d = b + int(math.sin(math.radians(pos)) * deepness * 10.0)
        pygame.draw.line(display, (127,255,0), (a, b), (c, d), 1)
        drawTree(c, d, pos - 25, deepness - 1)
        drawTree(c, d, pos + 25, deepness- 1)

def process(event):
    if event.type == pygame.QUIT:
        exit(0)

drawTree(370, 650, -90, 10)
pygame.display.flip()
while True:
    process(pygame.event.wait())

------------------------------------------------------------------------------------------------------------------------------------------------------
#Example - 2

import turtle
def tree(Length,n):
    if Length > 10:
        n.forward(Length)
        n.right(25)
        tree(Length-15,n)
        n.left(50)
        tree(Length-15,n)
        n.right(25)
        n.backward(Length)

def function():
    n = turtle.Turtle()
    data = turtle.Screen()
    n.left(90)
    n.up()
    n.backward(100)
    n.down()
    n.color("green")
    tree(85,n)
    data.exitonclick()

function()