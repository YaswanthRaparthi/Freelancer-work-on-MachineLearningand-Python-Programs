#Cleaning Data with Python

import pandas as pd
import numpy as ny
import matplotlib.pyplot as plt
from sklearn import metrics
from sklearn.metrics import confusion_matrix

#uploading Social_Network_Ads.csv dataset into the varibale name datainput
datainput = pd.read_csv('Social_Network_Ads.csv')
print(datainput[0:5])

#Data Cleaning
X=datainput.iloc[:,[2,3]].values
y=datainput.iloc[:,4].values
print(X[0:5])
print(y[0:5])

#using test_test_split method
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

#Data Preprocessing using StandardScaler
from sklearn.preprocessing import StandardScaler
sc_X=StandardScaler()
X_train=sc_X.fit_transform(X_train)
X_test=sc_X.transform(X_test)
print(X_train[0:5])

#LogisticRegression
from sklearn.linear_model import LogisticRegression
LR = LogisticRegression()
LR.fit(X_train, y_train)
predicted = LR.predict(X_test)
print("predict=", predicted)

#Accuracy
print("The accuracy score using the LogisticRegression is: ")
print(metrics.accuracy_score(y_test, predicted)*100)

#Confusion Matrix
print("Confusion Matix")
print(confusion_matrix(y_test, predicted))

#output

    User ID  Gender  Age  EstimatedSalary  Purchased
0  15624510    Male   19            19000          0
1  15810944    Male   35            20000          0
2  15668575  Female   26            43000          0
3  15603246  Female   27            57000          0
4  15804002    Male   19            76000          0
[[   19 19000]
 [   35 20000]
 [   26 43000]
 [   27 57000]
 [   19 76000]]
[0 0 0 0 0]
[[ 1.44160305 -1.08427099]
 [ 1.16071429 -0.78279674]
 [ 2.09701016 -0.84309159]
 [-0.43098869 -0.81294416]
 [-1.36728456  0.36280542]]
predict= [0 0 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0
 0 0 1 0 0 0]
The accuracy score using the LogisticRegression is: 
86.25
Confusion Matix
[[46  3]
 [ 8 23]]